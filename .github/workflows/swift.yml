name: iOS Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2.0'

      - name: Install dependencies
        run: pod install

      - name: List available simulators
        id: list-simulators
        run: xcrun simctl list devices available

      - name: Build and test
        run: |
          # Capture the first available iPhone simulator's name, OS version, and UDID
          AVAILABLE_SIMULATOR_INFO=$(xcrun simctl list devices available | grep -m 1 'iPhone')
          AVAILABLE_SIMULATOR=$(echo $AVAILABLE_SIMULATOR_INFO | awk -F'[()]' '{print $1}' | xargs)
          AVAILABLE_OS=$(echo $AVAILABLE_SIMULATOR_INFO | awk -F'[()]' '{print $2}' | xargs)

          # Check if a valid simulator name and OS version were found
          if [ -z "$AVAILABLE_SIMULATOR" ] || [ -z "$AVAILABLE_OS" ]; then
            echo "No available iPhone simulator found. Exiting."
            exit 1
          fi

          # Run the xcodebuild command with the found simulator name and OS version
          xcodebuild clean test \
          -workspace Showdown-Master-Referee.xcworkspace \
          -scheme Showdown-Master-Referee \
          -destination "platform=iOS Simulator,name=$AVAILABLE_SIMULATOR,OS=$AVAILABLE_OS" \
          -quiet
        env:
          MD_APPLE_SDK_ROOT: /Applications/Xcode_16.2.app
